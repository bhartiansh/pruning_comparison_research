# -*- coding: utf-8 -*-
"""TinyImageNET_Preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QNrz9xwH7UL_j-iLZQiC8haGJvmQ4HYA
"""

import subprocess
subprocess.run(["wget", "https://raw.githubusercontent.com/yandexdataschool/Practical_DL/spring2019/week03_convnets/tiny_img.py", "-O", "tiny_img.py"])

import tensorflow as tf
from tensorflow.keras.preprocessing.image import ImageDataGenerator

# Commented out IPython magic to ensure Python compatibility.
!git clone https://github.com/bhartiansh/pruning_comparison_research
# %cd pruning_comparison_research

def load_tiny_imagenet_data(data_dir='./tiny-imagenet-200'):
    train_dir = f'{data_dir}/train'
    val_dir = f'{data_dir}/val'

    # Validation folder fix (TinyImageNet stores val images differently)
    import os
    import shutil
    import pandas as pd

    val_annotations_path = os.path.join(val_dir, 'val_annotations.txt')
    val_img_dir = os.path.join(val_dir, 'images')
    val_data = pd.read_csv(val_annotations_path, sep='\t', header=None)
    val_data.columns = ['img', 'label', 'x1', 'y1', 'x2', 'y2']

    for label in val_data['label'].unique():
        os.makedirs(os.path.join(val_dir, label), exist_ok=True)

    for idx, row in val_data.iterrows():
        src = os.path.join(val_img_dir, row['img'])
        dst = os.path.join(val_dir, row['label'], row['img'])
        if os.path.exists(src):
            shutil.move(src, dst)

    if os.path.exists(val_img_dir):
        shutil.rmtree(val_img_dir)

    # Image generators
    train_gen = ImageDataGenerator(rescale=1./255)
    val_gen = ImageDataGenerator(rescale=1./255)

    train_generator = train_gen.flow_from_directory(
        train_dir,
        target_size=(224, 224),
        batch_size=64,
        class_mode='categorical'
    )

    val_generator = val_gen.flow_from_directory(
        val_dir,
        target_size=(224, 224),
        batch_size=64,
        class_mode='categorical'
    )

    return train_generator, val_generator

